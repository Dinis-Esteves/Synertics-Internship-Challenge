version: '3.9'

services:
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - "5433:5432"  # Host:Container port mapping (host 5433 â†’ container 5432)
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    ports:
      - "6379:6379"

  web:
    build: .
    command: >
      bash -c "python manage.py wait_for_db
      && python manage.py migrate
      && python manage.py loaddata datadump.json
      && echo \"from django.contrib.auth import get_user_model; User = get_user_model(); User.objects.filter(username='admin').exists() or User.objects.create_superuser('admin', 'admin@example.com', 'adminpass')\" | python manage.py shell
      && python manage.py runserver 0.0.0.0:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    environment:
      DJANGO_SETTINGS_MODULE: futures_dashboard.settings
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      CELERY_BROKER_URL: redis://redis:6379/0

  worker:
    build: .
    command: bash -c "python manage.py wait_for_db && celery -A futures_dashboard worker --loglevel=info"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    volumes:
      - .:/app
    environment:
      DJANGO_SETTINGS_MODULE: futures_dashboard.settings
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      CELERY_BROKER_URL: redis://redis:6379/0

  beat:
    build: .
    command: bash -c "python manage.py wait_for_db && celery -A futures_dashboard beat --loglevel=info"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    volumes:
      - .:/app
    environment:
      DJANGO_SETTINGS_MODULE: futures_dashboard.settings
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      CELERY_BROKER_URL: redis://redis:6379/0

volumes:
  postgres_data: